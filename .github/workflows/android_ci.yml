name: Android CI/CD

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: 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

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: build gradle
        uses: ./gradlew build

      - name: Build release APK
        uses: ./gradlew assembleRelease

      - name: List files
        run: ls -lrt app/build/outputs/apk/release

      - name: Build Signed APK
        uses: r0adkll/sign-android-release@v1
        with:
            releaseDirectory: app/release
            signingKeyBase64: ${{ secrets.SIGNING_KEY }}
            alias: ${{ secrets.SIGNING_ALIAS }}
            keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
            keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload release APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: app/release/app-release.apk

      - name: Send FCM Notification
        run: |
            curl -X POST --header "Authorization: key=${{ secrets.FCM_SERVER_KEY }}" \
            --header "Content-Type: application/json" \
            -d '{
                  "to": "testers",
                  "notification": {
                    "title": "New App Version Released",
                    "body": "A new version of ComposeNews is now available for download."
                  }
                }' \
            https://fcm.googleapis.com/fcm/send

      - name: Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"New version of ComposeNews available!"}' \
          https://hooks.slack.com/services/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